@Library('global-shared-library')_

/* Pipeline */
pipeline {
  agent { label "containerBuilds" }
  options { 
    // ansiColor('xterm') 
    disableConcurrentBuilds()
    skipDefaultCheckout true
  }

  environment {
    HOME           = "${WORKSPACE}"
  }

  stages {
    stage ('cleanWs & checkout scm') {
      steps {
        script {
          deleteDir()
          // cleanWs()
          checkout scm
        }
      }
    }
    stage ('preparation') {
      steps {
        script {
          env.DOCKERFILES        = dockerfiles
          env.GITHUB_REPO        = github_repo.toLowerCase()
          env.DOCKER_TAG         = docker_tag.toLowerCase()
        }
      }
    }
    stage('Build and push') {
        when {
            allOf {
            expression { dockerfiles }
            branch "main"
            }
        }
        steps {
          container('maven') {
            script {
                mavenInstall.install()
                mavenInstall.test()
            }
          }
        }
        steps {
          container('docker') {
            script {
                dockerBuild.login()
                dockerBuild.build(env.DOCKER_TAG)
                dockerBuild.push(env.DOCKER_TAG)
            }
          }
        }
    }
  }
  // post { 
  //   always {
  //     script {
  //       cleanWs()
  //     }
  //   }
  // }
}
