@Library('docker-shared-lib')_

/* Pipeline */
pipeline {
  agent { label "containerBuilds" }
  options { 
    // ansiColor('xterm') 
    disableConcurrentBuilds()
    skipDefaultCheckout true
  }

  environment {
    HOME           = "${WORKSPACE}"
  }

  stages {
      container('dind') {
          stage ('cleanWs & checkout scm') {
            steps {
              script {
                deleteDir()
                // cleanWs()
                checkout scm
              }
            }
          }
      }
      container('dind') {
          stage ('preparation') {
            steps {
              script {
                env.DOCKERFILES        = dockerfiles
                env.GITHUB_REPO        = github_repo.toLowerCase()
                env.DOCKER_TAG         = docker_tag.toLowerCase()
              }
            }
          }
      }
      container('dind') {
          stage('Container build') {
              when {
                  allOf {
                  expression { dockerfiles }
                  branch "main"
                  }
              }
              steps {
                  script {
                      dockerBuild.login()
                      dockerBuild.build(env.DOCKER_TAG)
                      dockerBuild.push(env.DOCKER_TAG)
                  }
              }
          }
      }
  }
  // post { 
  //   always {
  //     script {
  //       cleanWs()
  //     }
  //   }
  // }
}
